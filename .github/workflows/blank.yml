# This is a basic workflow to help you get started with Actions
# Cloud Serverless Inventory Tool (Multi-Cloud)

This Ansible-based tool collects all serverless services from AWS, GCP, Azure, and Alibaba Cloud, then exports reports to CSV, JSON, and HTML formats and optionally emails them.

## ðŸ§° Prerequisites

| Cloud     | CLI Required | IAM Permissions (Read-only)                             |
|-----------|--------------|----------------------------------------------------------|
| AWS       | aws-cli      | `AWSLambda_ReadOnlyAccess`, `AmazonEC2ContainerServiceReadOnlyAccess`, `AWSStepFunctionsReadOnlyAccess` |
| GCP       | gcloud       | `roles/cloudfunctions.viewer`, `roles/run.viewer`, `roles/viewer` |
| Azure     | az-cli       | Reader role on Function Apps, Logic Apps                |
| Alibaba   | aliyun-cli   | `AliyunFCReadOnlyAccess`, `AliyunSAEReadOnlyAccess`     |

## ðŸš€ How to Run

```bash
ansible-playbook -i inventory/localhost site.yml

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
